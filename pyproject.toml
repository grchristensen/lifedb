[tool]
[tool.poetry]
name = "lifedb"
version = "0.1.0"
homepage = "https://github.com/grchristensen/lifedb"
description = "Python code for processing data from finance/health/journaling/etc. apps and consolidating it into one database for monitoring aspect of one's personal life.."
authors = ["Gage Christensen <49492919+grchristensen@users.noreply.github.com>"]
readme = "README.md"
license =  "Apache-2.0"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "lifedb" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"

black  = { version = "^24.4.2", optional = true}
bump2version = {version = "^1.0.1", optional = true}
dagster = { version = "1.9.0" }
dagster-webserver = { version = "1.9.0" }
dash = { version = "^2.18.1" }
importlib-resources = { version = "^6.4.5" }
isort  = { version = "^5.8.0", optional = true}
flake8  = { version = "^5.0.4", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
httpx = { version = "^0.27.2" }
# Pin for mkdocs, Jinja2 introduced a breaking change in 3.1 >:-(
Jinja2 = { version = "~3.0.3", optional = true }
mkdocs  = { version = "^1.1.2", optional = true}
mkdocstrings  = { extras = ["python"], version = "^0.25.1", optional = true}
mkdocs-autorefs = {version = "^0.3.1", optional = true}
mkdocs-include-markdown-plugin  = { version = "^1.0.0", optional = true}
mkdocs-material  = { version = "^8.2.15", optional = true}
mkdocs-material-extensions  = { version = "^1.0.1", optional = true}
mypy = {version = "^1.13.0", optional = true}
# numpy 2.0 is not compatible with pandas 1.5, need to pin because
# pandas does not properly specify numpy dependency
# https://stackoverflow.com/questions/78634235/numpy-dtype-size-changed-may-indicate-binary-incompatibility-expected-96-from
numpy = { version = "^1.26.0" }
pandas = { version = "^1.5.3" }
pip  = { version = "^24.0.0", optional = true}
polars = { version = "^1.12.0" }
pre-commit = {version = "^2.12.0", optional = true}
psycopg = {version = "^3.2.3", extras = ["binary", "pool"]}
pytest  = { version = "^6.2.4", optional = true}
pytest-cov  = { version = "^2.12.0", optional = true}
python-dotenv = { version = "^1.0.1" }
PyYAML = { version = "^6.0.2" }
toml = {version = "^0.10.2", optional = true}
tox  = { version = "^3.20.1", optional = true}
typer = { version = "^0.12.5" }
types-PyYAML = { version = "^6.0.0" }
twine  = { version = "^3.3.0", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs"
    ]

[tool.black]
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
# match black
line_length = 88
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
lifedb = "lifedb.run:run"

[tool.dagster]
module_name = "lifedb.dagster.definitions"
code_location_name = "lifedb.dagster"
